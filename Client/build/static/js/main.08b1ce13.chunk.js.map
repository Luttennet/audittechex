{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","nests","setNests","getPR","a","request","axios","create","baseURL","get","tempResult","results","data","useEffect","mounted","then","pr","fetchMyAPI","className","map","nest","i","pr_url","id","created_time","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAwDeA,MApDf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACLC,EADK,KACEC,EADF,KAGPC,EAAK,uCAAG,gCAAAC,EAAA,6DACNC,EAAUC,IAAMC,OAAO,CAC3BC,QAAS,uCAFC,SAIaH,EAAQI,MAJrB,cAINC,EAJM,OAKNC,EAAUD,EAAWE,KALf,kBAMLD,GANK,2CAAH,qDAuBX,OAdAE,qBAAU,WAAM,4CACd,4BAAAT,EAAA,6DACMU,GAAU,EADhB,SAEQX,IACHY,MAAK,SAAAC,GACDF,GACDZ,EAASc,MALjB,iCAQS,kBAAMF,GAAU,KARzB,4CADc,uBAAC,WAAD,wBAWdG,KACC,IAGD,wBAAOC,UAAU,cAAjB,UACE,kCACE,yDACA,+BACE,iDACA,uCACA,8CACA,kDAGJ,gCAEIjB,EAAMkB,KAAI,SAACC,EAAMC,GAAP,OACR,+BACE,6BAAKD,EAAK,GAAGE,SACb,6BAAKF,EAAK,GAAGG,KACb,6BAAKH,EAAK,GAAGI,eACb,mCAAK,qBAAKC,IAAI,0FAA0FC,IAAM,oBAJvGL,YChCNM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08b1ce13.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; \nimport './App.css';\n\nfunction App() {\n  const [ nests, setNests ] = useState([]);\n\n  const getPR = async function () {\n    const request = axios.create({\n      baseURL: 'http://localhost:3030/pullrequests'\n  })\n    const tempResult = await request.get()\n    const results = tempResult.data\n    return results\n  }\n  \n  useEffect(() => {\n    async function fetchMyAPI() {\n      let mounted = true;\n      await getPR()\n        .then(pr => {\n          if(mounted) {\n            setNests(pr)\n          }\n        })\n      return () => mounted = false;\n    }\n    fetchMyAPI()\n  }, [])\n\n  return (\n    <table className=\"stats-table\">\n      <thead>\n        <h1>Pull requests dashboard</h1>\n        <tr>\n          <th>pullrequest URL</th>\n          <th>PR ID</th>\n          <th>created time</th>\n          <th>screenshot</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          nests.map((nest, i) =>\n            <tr key={i}>\n              <th>{nest[0].pr_url}</th>\n              <th>{nest[0].id}</th>\n              <th>{nest[0].created_time}</th>\n              <th> <img src=\"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\" alt = \"screenshot\"/></th>\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}